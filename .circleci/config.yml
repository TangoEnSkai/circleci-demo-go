# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

variables:
  - cache_tag: &cache_tag go-mod-v4-{{ checksum "go.sum" }}

executors:
  golang:
    resource_class: large
    docker:
      - image: cimg/go:1.18
        environment:
          GOFLAGS: -mod=vendor
          GOMAXPROCS: "4"

commands:
  setup:
    description: "runs code check, setups keys, downloads deps"
    steps:
      - checkout
      - attach_workspace:
          at: . # relative path to our working directory

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  dependencies:
    executor: golang
    steps:
      - checkout
      - restore_cache:
          keys: 
            - *cache_tag
      - run:
          name: instal dependencies
          command: make dependencies
      - save_cache:
          key: *cache_tag
          paths:
            - "/go/pkg/mod"

  build:
    # CircleCI Go images available at: https://circleci.com/developer/images/image/cimg/go
    docker:
      - image: cimg/go:1.18
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: show go version
          command: go version
      - restore_cache:
          keys:
            - *cache_tag
      - run:
          name: Run tests
          command: |
            mkdir -p /tmp/test-reports
            gotestsum --junitfile /tmp/test-reports/unit-tests.xml
      - store_test_results:
          path: /tmp/test-reports

  test:
    executor: golang
    steps:
      - run:
          name: run test
          command: |
            make test

  lint:
    executor: golang
    steps:
      - run:
          name: run lint tools
          command: |
            make lint

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-and-test: # This is the name of the workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - dependencies:
          post-steps:
            - save_cache:
                key: *cache_tag
                paths:
                  - vendor
                  - bin
            - persist_to_workspace:
                root: . # relative path to our working directory
                paths:
                  - vendor
                  - bin
        
      - build:
          requires:
            - dependencies
          pre-steps:
            - setup
    
      - test:
          requires:
            - dependencies
          pre-steps:
            - setup
      - lint:
          requires:
            - dependencies
          pre-steps:
            - setup
